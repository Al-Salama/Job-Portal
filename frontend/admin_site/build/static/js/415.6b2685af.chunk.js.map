{"version":3,"file":"static/js/415.6b2685af.chunk.js","mappings":"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","sources":["hooks/useArray.js","pages/Home.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nexport default function useArray(defaultValue) {\r\n  const [array, setArray] = useState(defaultValue)\r\n\r\n  function push(element) {\r\n    setArray(a => [...a, element])\r\n  }\r\n\r\n  function filter(callback) {\r\n    setArray(a => a.filter(callback))\r\n  }\r\n\r\n  function update(index, newElement) {\r\n    setArray(a => [\r\n      ...a.slice(0, index),\r\n      newElement,\r\n      ...a.slice(index + 1, a.length),\r\n    ])\r\n  }\r\n\r\n  function remove(index) {\r\n    setArray(a => [...a.slice(0, index), ...a.slice(index + 1, a.length)])\r\n  }\r\n\r\n  function clear() {\r\n    setArray([])\r\n  }\r\n\r\n  return { array, set: setArray, push, filter, update, remove, clear }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport settings from \"../data/settings\";\r\nimport useArray from \"../hooks/useArray\";\r\nimport './css/Home.css'\r\n\r\nfunction Home({ adminInfo }) {\r\n    const [newSubmissions, setNewSubmissions] = useState();\r\n    const [acceptedSubmissions, setAcceptedSubmissions] = useState();\r\n    const [pendingSubmissions, setPendingSubmissions] = useState();\r\n    const [rejectedSubmissions, setRejectedSubmissions] = useState();\r\n\r\n    const applications = useArray(false);\r\n    const fetched = useRef(false);\r\n\r\n    useEffect(() => {\r\n        if (fetched.current) return;\r\n        fetched.current = true;\r\n\r\n        fetchSubmissions({setNewSubmissions, setAcceptedSubmissions, setPendingSubmissions, setRejectedSubmissions, setApplications: applications.set});\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!Array.isArray(applications.array)) return;\r\n\r\n        const applicationsSelector = document.getElementById(\"applications-select\");\r\n        const selectedAppId = applications.array.findIndex(v => v.selected === true);\r\n        console.log(selectedAppId)\r\n        if (typeof selectedAppId == \"number\") {\r\n            applicationsSelector.selectedIndex = selectedAppId;\r\n        }\r\n\r\n        function onApplicationSelectPreChange(event) {\r\n            const numValue = parseInt(this.value)\r\n            console.countReset(\"app seledct\")\r\n            console.count(\"app seledct\")\r\n            if (!isNumber(numValue)) {\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            console.count(\"app seledct\")\r\n\r\n            onApplicationSelectChange.call(this, event, numValue, {setNewSubmissions, setAcceptedSubmissions, setPendingSubmissions, setRejectedSubmissions, setApplications: applications.set});\r\n        }\r\n        applicationsSelector.addEventListener(\"change\", onApplicationSelectPreChange)\r\n        return () => {\r\n            applicationsSelector.removeEventListener(\"change\", onApplicationSelectPreChange)\r\n        }\r\n    }, [applications])\r\n    useEffect(() => {\r\n        if (!(newSubmissions && acceptedSubmissions && pendingSubmissions && rejectedSubmissions && Array.isArray(applications.array))) {\r\n            return;\r\n        }\r\n\r\n        const categoryTabs = document.querySelectorAll(\".category-tabs button\");\r\n\r\n        function onTabPreClick(event) {\r\n            if (this.classList.contains(\"selected\")) {\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n\r\n            const loopSettings = [\r\n                {getter: newSubmissions, setter: setNewSubmissions},\r\n                {getter: acceptedSubmissions, setter: setAcceptedSubmissions},\r\n                {getter: pendingSubmissions, setter: setPendingSubmissions},\r\n                {getter: rejectedSubmissions, setter: setRejectedSubmissions}\r\n            ]\r\n\r\n            onTabClick.call(this, event, loopSettings);\r\n        }\r\n\r\n        for (const tab of categoryTabs) {\r\n            tab.addEventListener(\"click\", onTabPreClick);\r\n        }\r\n\r\n        // Pages handling..\r\n        function onPageButtonPreClick(event) {\r\n            console.count(\"select page\")\r\n            if (this.classList.contains(\"selected-page\")) {\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            console.count(\"select page\")\r\n            const categories = {\r\n                getters: [newSubmissions, acceptedSubmissions, pendingSubmissions, rejectedSubmissions],\r\n                setters: [setNewSubmissions, setAcceptedSubmissions, setPendingSubmissions, setRejectedSubmissions]\r\n            };\r\n            onPageButtonClick.call(this, event, categories, applications.array);\r\n        }\r\n\r\n        const pagesButtons = document.querySelectorAll(\".Home .page-selector button\");\r\n        for (const pageButton of pagesButtons) {\r\n            pageButton.addEventListener(\"click\", onPageButtonPreClick)\r\n        }\r\n\r\n        const submissionItems = document.querySelectorAll(\".submissions tbody tr\");\r\n        for (const submission of submissionItems) {\r\n            submission.addEventListener(\"click\", onSubmissionClick)\r\n        }\r\n\r\n        return () => {\r\n            for (const tab of categoryTabs) {\r\n                tab.removeEventListener(\"click\", onTabPreClick);\r\n            }\r\n\r\n            for (const pageButton of pagesButtons) {\r\n                pageButton.removeEventListener(\"click\", onPageButtonPreClick)\r\n            }\r\n\r\n            for (const submission of submissionItems) {\r\n                submission.removeEventListener(\"click\", onSubmissionClick)\r\n            }\r\n        }\r\n    }, [newSubmissions, acceptedSubmissions, pendingSubmissions, rejectedSubmissions, applications.array])\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <main>\r\n                <section className=\"controls\">\r\n                    {getApplicationsSelect(applications.array)}\r\n                </section>\r\n\r\n                <section className=\"submissions-info\">\r\n                    {getSubmissionInfo({\r\n                        applications: applications.array,\r\n                        categories: [newSubmissions, acceptedSubmissions, pendingSubmissions, rejectedSubmissions]\r\n                    })}\r\n                </section>\r\n\r\n                <section className=\"submissions-area\">\r\n                    <div className=\"category-tabs\">\r\n                        <button id=\"category-new\" className={newSubmissions?.selected ? \"selected\" : null}>الجديدة</button>\r\n                        <button id=\"category-accepted\" className={acceptedSubmissions?.selected ? \"selected\" : null}>المقبولة</button>\r\n                        <button id=\"category-pending\" className={pendingSubmissions?.selected ? \"selected\" : null}>المعلقة</button>\r\n                        <button id=\"category-rejected\" className={rejectedSubmissions?.selected ? \"selected\" : null}>المرفوضة</button>\r\n                    </div>\r\n\r\n                    <div className=\"submission-field\">\r\n                        {getSelectedSubmissions([newSubmissions, acceptedSubmissions, pendingSubmissions, rejectedSubmissions])}\r\n                    </div>\r\n                </section>\r\n                {\r\n                    getPages({newSubmissions, acceptedSubmissions, pendingSubmissions, rejectedSubmissions})\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\nlet selectedCategory;\r\nlet categoryName;\r\nif (args.newSubmissions?.selected) {\r\n    selectedCategory = args.newSubmissions;\r\n    categoryName = \"new\";\r\n} else if (args.acceptedSubmissions?.selected) {\r\n    selectedCategory = args.acceptedSubmissions\r\n    categoryName = \"accepted\"\r\n} else if (args.pendingSubmissions?.selected) {\r\n    selectedCategory = args.pendingSubmissions\r\n    categoryName = \"pending\"\r\n} else if (args.rejectedSubmissions?.selected) {\r\n    selectedCategory = args.rejectedSubmissions\r\n    categoryName = \"rejected\"\r\n}\r\n*/\r\n\r\nfunction isNumber(num = Number.prototype) {\r\n    return !Number.isNaN(num) && Number.isFinite(num);\r\n}\r\n\r\nfunction onSubmissionClick(event) {\r\n    const submissionId = parseInt(this.dataset.id);\r\n    if (!isNumber(submissionId)) {\r\n        event.preventDefault();\r\n        return;\r\n    }\r\n\r\n    window.location.href = `/submission?id=${submissionId}`\r\n}\r\n\r\nasync function onApplicationSelectChange(event, applicationId = 1, states = {}){\r\n    let fetchResult;\r\n    const queries = [{key: \"appId\", value: applicationId}]\r\n    const query = formatQueryString(queries);\r\n\r\n    const url = `${settings.api}/submissions${query}`\r\n    try {\r\n        fetchResult = await fetch(url, {\r\n            method: \"GET\",\r\n            credentials: \"include\"\r\n        });\r\n    } catch (error) {\r\n        console.error(error);\r\n    } finally {\r\n        if (fetchResult) {\r\n            const response = await fetchResult.json();\r\n            if (fetchResult.ok) {\r\n                setQueryString(queries);\r\n\r\n                states.setNewSubmissions({\r\n                    ...response.submissions.new,\r\n                    buttonId: \"category-new\"\r\n                })\r\n                states.setAcceptedSubmissions({\r\n                    ...response.submissions.accepted,\r\n                    buttonId: \"category-accepted\",\r\n                })\r\n                states.setPendingSubmissions({\r\n                    ...response.submissions.pending,\r\n                    buttonId: \"category-pending\",\r\n                })\r\n                states.setRejectedSubmissions({\r\n                    ...response.submissions.rejected,\r\n                    buttonId: \"category-rejected\",\r\n                })\r\n\r\n                response.applications = response.applications.map((val, ind) => {\r\n                    const toDate = new Date();\r\n                    toDate.setTime(Number(val.startDate))\r\n                    return {\r\n                        ...val,\r\n                        startDate: toDate.toLocaleDateString(\"ar-US\", {year: 'numeric', month: 'long', day: 'numeric' })\r\n                    }\r\n                })\r\n                states.setApplications(response.applications)\r\n            } else {\r\n                if (fetchResult.status === 401) {\r\n                    window.location.href = \"/login\"\r\n                    return;\r\n                }\r\n                console.error(\"Error fetching submissions, error code:\", fetchResult.status)\r\n                console.error(\"Response:\\n\", response)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nasync function onPageButtonClick(event, categories = [], applications = []) {\r\n    const selectedApplication = applications.find(value => value.selected === true);\r\n    const selectedCategory = categories.getters.findIndex(value => value.selected === true);\r\n    const requestedPage = parseInt(this.dataset.pageNumber);\r\n    if (!isNumber(requestedPage)) return;\r\n\r\n    let fetchResult;\r\n    const url = `${settings.api}/submissions/${selectedApplication.id}/${selectedCategory}/pages/${requestedPage}`\r\n    try {\r\n        fetchResult = await fetch(url, {\r\n            method: \"GET\",\r\n            credentials: \"include\"\r\n        });\r\n    } catch (error) {\r\n        console.error(error);\r\n    } finally {\r\n        if (fetchResult) {\r\n            const response = await fetchResult.json();\r\n            if (fetchResult.ok) {\r\n                categories.setters[selectedCategory]({\r\n                    ...categories.getters[selectedCategory],\r\n                    ...response.submissions\r\n                })\r\n\r\n                const params = new Proxy(new URLSearchParams(window.location.search), {\r\n                    get: (searchParams, prop) => searchParams.get(prop),\r\n                });\r\n\r\n                const queriesList = [];\r\n                if (params.appId) {\r\n                    queriesList.push({key: \"appId\", value: selectedApplication.id});\r\n                }\r\n                if (params.category) {\r\n                    queriesList.push({key: \"category\", value: selectedCategory});\r\n                }\r\n                if (requestedPage > 1) {\r\n                    queriesList.push({key: \"page\", value: requestedPage});\r\n                }\r\n                setQueryString(queriesList);\r\n            } else {\r\n                if (fetchResult.status === 401) {\r\n                    window.location.href = \"/login\"\r\n                    return;\r\n                }\r\n                console.error(\"Error fetching submissions, error code:\", fetchResult.status)\r\n                console.error(\"Response:\\n\", response)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction onTabClick(event, loopSettings) {\r\n    let selectedTab\r\n    let theState;\r\n    for (const categoryId in loopSettings) {\r\n        theState = loopSettings[categoryId];\r\n\r\n        if (theState.getter?.buttonId === this.id) {\r\n            this.classList.add(\"selected\")\r\n            selectedTab = categoryId;\r\n            theState.setter({\r\n                ...theState.getter,\r\n                selected: true\r\n            })\r\n        } else if (theState.getter?.selected) {\r\n            delete theState.getter.selected;\r\n            theState.setter({\r\n                ...theState.getter\r\n            })\r\n        }\r\n    }\r\n\r\n    const params = new Proxy(new URLSearchParams(window.location.search), {\r\n        get: (searchParams, prop) => searchParams.get(prop),\r\n    });\r\n    const appId = params.appId;\r\n\r\n    const queriesList = [];\r\n    if (appId) {\r\n        queriesList.push({key: \"appId\", value: appId});\r\n    }\r\n    queriesList.push({key: \"category\", value: selectedTab});\r\n    setQueryString(queriesList);\r\n}\r\n\r\nfunction getPages(args) {\r\n    let selectedCategory;\r\n    if (args.newSubmissions?.selected) {\r\n        selectedCategory = args.newSubmissions;\r\n    } else if (args.acceptedSubmissions?.selected) {\r\n        selectedCategory = args.acceptedSubmissions\r\n    } else if (args.pendingSubmissions?.selected) {\r\n        selectedCategory = args.pendingSubmissions\r\n    } else if (args.rejectedSubmissions?.selected) {\r\n        selectedCategory = args.rejectedSubmissions\r\n    }\r\n    if (!selectedCategory) return;\r\n\r\n    let prevPage =\r\n        <button className=\"prev-page\" data-page-number={selectedCategory.currentPage - 1} disabled={selectedCategory.currentPage <= 1}>\r\n            السابق\r\n        </button>\r\n    ;\r\n    let firstPage;\r\n    if (selectedCategory.currentPage > 1) {\r\n        prevPage =\r\n            <button className=\"prev-page\" data-page-number={selectedCategory.currentPage - 1}>\r\n                السابق\r\n            </button>\r\n        ;\r\n\r\n        firstPage =\r\n            <button data-page-number=\"1\">\r\n                1\r\n            </button>\r\n        ;\r\n    }\r\n\r\n    let nextPage =\r\n        <button className=\"next-page\" data-page-number={selectedCategory.currentPage + 1} disabled={selectedCategory.currentPage >= selectedCategory.totalPages}>\r\n            التالي\r\n        </button>\r\n    ;\r\n    let lastPage;\r\n    if (selectedCategory.currentPage < selectedCategory.totalPages) {\r\n        lastPage =\r\n            <button data-page-number={selectedCategory.totalPages}>\r\n                {selectedCategory.totalPages}\r\n            </button>\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <section className=\"page-selector\">\r\n            {prevPage}\r\n            {firstPage}\r\n            <button data-page-number={selectedCategory.currentPage} className=\"selected-page\">\r\n                {selectedCategory.currentPage}\r\n            </button>\r\n            {lastPage}\r\n            {nextPage}\r\n        </section>\r\n    )\r\n}\r\n\r\nfunction getSubmissionInfo(args) {\r\n    const {applications, categories} = args;\r\n    if (applications.length <= 0 || !categories[0] || !('rows' in categories[0])) {\r\n        return null;\r\n    }\r\n\r\n    const submissionsCount = {\r\n        total: applications.find(v => v.selected === true).totalSubmissions,\r\n        selectedCategory: categories.find(v => v.selected === true).count\r\n    }\r\n    return (\r\n        <>\r\n            <div><p>\r\n                <b>إجمالي عدد التقديمات:</b> {submissionsCount.total}\r\n            </p></div>\r\n\r\n            <div><p>\r\n                <b>عدد التقديمات في القسم المحدد:</b> {submissionsCount.selectedCategory}\r\n            </p></div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction getSelectedSubmissions(states) {\r\n    let submissions;\r\n    for (const categorySubmissions of states) {\r\n        if (categorySubmissions && categorySubmissions.selected) {\r\n            submissions = categorySubmissions.rows.map((value, index) => {\r\n                return (\r\n                    <tr key={index} data-id={value.id}>\r\n                        <td>{value.id}</td>\r\n                        <td className=\"spacing-cell\"></td>\r\n                        <td>{value.name}</td>\r\n                        <td className=\"spacing-cell\"></td>\r\n                        <td>{value.id_number}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n            break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table className=\"submissions\">\r\n            <thead>\r\n                <tr>\r\n                    <th>الرقم</th>\r\n                    <th className=\"spacing-cell\"></th>\r\n                    <th>الإسم</th>\r\n                    <th className=\"spacing-cell\"></th>\r\n                    <th>رقم الهوية</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {submissions}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nfunction getApplicationsSelect(applications) {\r\n    let options;\r\n    let select;\r\n\r\n    if (applications) {\r\n        options = applications.map((value, index) => {\r\n            return <option key={value.id} value={`${value.id}`}>{`${value.jobName} | ${value.startDate}${(value.closed && \" [Closed]\") || \"\"}`}</option>\r\n        })\r\n        select =\r\n            <select id=\"applications-select\">\r\n                {options}\r\n            </select>\r\n    } else {\r\n        select =\r\n        <select id=\"applications-select\" defaultValue={\"default\"}>\r\n            <option value={\"default\"} disabled>Loading ...</option>\r\n        </select>\r\n    }\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"applications-select\">قائمة التقديمات المسجلة</label>\r\n            {select}\r\n        </div>\r\n    );\r\n}\r\n\r\nasync function fetchSubmissions(states) {\r\n    let fetchResult;\r\n    const params = new Proxy(new URLSearchParams(window.location.search), {\r\n        get: (searchParams, prop) => searchParams.get(prop),\r\n    });\r\n    const appId = params.appId;\r\n    const selectedCategory = params.category;\r\n    const page = params.page;\r\n    const queriesList = [];\r\n    if (appId) {\r\n        queriesList.push({key: \"appId\", value: appId});\r\n    }\r\n    if (selectedCategory) {\r\n        queriesList.push({key: \"category\", value: selectedCategory});\r\n    }\r\n    if (page) {\r\n        queriesList.push({key: \"page\", value: page});\r\n    }\r\n    const query = formatQueryString(queriesList);\r\n    const url = `${settings.api}/submissions${query}`;\r\n    try {\r\n        fetchResult = await fetch(url, {\r\n            method: \"GET\",\r\n            credentials: \"include\"\r\n        })\r\n    } catch (error) {\r\n        console.error(error)\r\n    } finally{\r\n        if (fetchResult) {\r\n            const response = await fetchResult.json();\r\n            if (fetchResult.ok) {\r\n                states.setNewSubmissions({\r\n                    ...response.submissions.new,\r\n                    buttonId: \"category-new\"\r\n                })\r\n                states.setAcceptedSubmissions({\r\n                    ...response.submissions.accepted,\r\n                    buttonId: \"category-accepted\",\r\n                })\r\n                states.setPendingSubmissions({\r\n                    ...response.submissions.pending,\r\n                    buttonId: \"category-pending\",\r\n                })\r\n                states.setRejectedSubmissions({\r\n                    ...response.submissions.rejected,\r\n                    buttonId: \"category-rejected\",\r\n                })\r\n\r\n                response.applications = response.applications.map((val, ind) => {\r\n                    const toDate = new Date();\r\n                    toDate.setTime(Number(val.startDate))\r\n                    return {\r\n                        ...val,\r\n                        startDate: toDate.toLocaleDateString(\"ar-US\", {year: 'numeric', month: 'long', day: 'numeric' })\r\n                    }\r\n                })\r\n                states.setApplications(response.applications)\r\n            } else {\r\n                if (fetchResult.status === 401) {\r\n                    window.location.href = \"/login\"\r\n                    return;\r\n                }\r\n                console.error(\"Error fetching submissions, error code:\", fetchResult.status)\r\n                console.error(\"Response:\\n\", response)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction formatQueryString(queries) {\r\n    let queryString = '';\r\n    let firstQuery = true;\r\n    for (const query of queries) {\r\n        queryString = queryString\r\n        .concat((firstQuery && \"?\") || \"&\")\r\n        .concat(query.key)\r\n        .concat(\"=\")\r\n        .concat(query.value);\r\n\r\n        if (firstQuery) firstQuery = false;\r\n    }\r\n    return queryString\r\n}\r\nfunction setQueryString(queries) {\r\n    const queryString = formatQueryString(queries);\r\n    const fullPath = window.location.origin + window.location.pathname + queryString\r\n    window.history.pushState({\r\n        path: fullPath,\r\n    }, '', fullPath);\r\n\r\n    return queryString;\r\n}\r\n\r\nexport default Home;"],"names":["useArray","defaultValue","_useState","useState","_useState2","_slicedToArray","array","setArray","set","push","element","a","concat","_toConsumableArray","filter","callback","update","index","newElement","slice","length","remove","clear","isNumber","num","arguments","undefined","Number","prototype","isNaN","isFinite","onSubmissionClick","event","submissionId","parseInt","this","dataset","id","window","location","href","preventDefault","onApplicationSelectChange","_x","_onApplicationSelectChange","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee","states","fetchResult","queries","query","url","response","_args","wrap","_context","prev","next","formatQueryString","key","value","settings","fetch","method","credentials","sent","t0","console","error","json","ok","setQueryString","setNewSubmissions","_objectSpread","submissions","new","buttonId","setAcceptedSubmissions","accepted","setPendingSubmissions","pending","setRejectedSubmissions","rejected","applications","map","val","ind","toDate","Date","setTime","startDate","toLocaleDateString","year","month","day","setApplications","status","abrupt","finish","stop","onPageButtonClick","_x2","_onPageButtonClick","_callee2","categories","selectedApplication","selectedCategory","requestedPage","params","queriesList","_args2","_context2","find","selected","getters","findIndex","pageNumber","setters","Proxy","URLSearchParams","search","get","searchParams","prop","appId","category","onTabClick","loopSettings","selectedTab","theState","categoryId","_theState$getter","_theState$getter2","getter","classList","add","setter","getPages","args","_args$newSubmissions","_args$acceptedSubmiss","_args$pendingSubmissi","_args$rejectedSubmiss","newSubmissions","acceptedSubmissions","pendingSubmissions","rejectedSubmissions","firstPage","prevPage","_jsx","className","currentPage","disabled","children","lastPage","nextPage","totalPages","_jsxs","getSubmissionInfo","submissionsCount","total","v","totalSubmissions","count","_Fragment","getSelectedSubmissions","_step7","_iterator7","_createForOfIteratorHelper","s","n","done","categorySubmissions","rows","name","id_number","err","e","f","getApplicationsSelect","options","select","jobName","closed","htmlFor","_fetchSubmissions","_callee3","page","_context3","_step8","queryString","firstQuery","_iterator8","fullPath","origin","pathname","history","pushState","path","_ref","adminInfo","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","fetched","useRef","useEffect","current","_x3","fetchSubmissions","Array","isArray","applicationsSelector","document","getElementById","selectedAppId","log","selectedIndex","addEventListener","onApplicationSelectPreChange","removeEventListener","numValue","countReset","call","_step","categoryTabs","querySelectorAll","_iterator","onTabPreClick","_step2","pagesButtons","_iterator2","onPageButtonPreClick","_step3","submissionItems","_iterator3","_step4","_iterator4","_step5","_iterator5","_step6","_iterator6","contains"],"sourceRoot":""}